services:
  mongodb:
    image: mongo:7.0
    container_name: weather-mongodb
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  weather-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests,sys; sys.exit(0 if requests.get('http://localhost:5000/metrics', timeout=5).ok else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional, run with profile nginx
  nginx:
    image: nginx:alpine
    container_name: weather-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - weather-app
    networks:
      - weather-network
    profiles:
      - nginx 

networks:
  weather-network:
    driver: bridge 
